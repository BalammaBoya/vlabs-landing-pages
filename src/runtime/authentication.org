#+TITLE: Authentication
#+AUTHOR: VLEAD
#+DATE: <2017-04-06 Thu>
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-1.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export

* Introduction
  This has functionality to provide authentication to
  =vlabs-landing-pages=
* Authentication
** Set Login url to content iframe
   By default on page loads =contentIframe= is set to load
   all the disciplines. This is to be replaced with login
   url of the OpenEdx when user clicks on =Login= button
   from the header division
#+NAME: set-login-url-to-content-iframe
#+BEGIN_SRC javascript 
var setLoginUrlInContentIframe = function(event) {
  console.log("=======setting login url to content iframe=====");
  var iframe = document.getElementById("contentIframe");
  iframe.sandbox = 'allow-scripts allow-same-origin allow-popups allow-forms';
  if(event == "login"){
    iframe.src = hosted_base + "/login";
  }
  else{
    iframe.src = hosted_base + "/logout";
    loadAllDisciplines();
  }
};

#+END_SRC
** Set user registration url to content iframe
   This function sets =contentIframe= to the registration
   url of an openedx platform when a user clicks on
   =Register= button from header
#+NAME: set-register-url-to-content-iframe
#+BEGIN_SRC javascript 
var setRegisterUrlInContentIframe = function() {
  console.log("=======setting registration url to content iframe=====");
  var iframe = document.getElementById("contentIframe");
  iframe.src = hosted_base + "/register";
  iframe.sandbox = 'allow-scripts allow-same-origin allow-popups allow-forms';
};

#+END_SRC
** Post message event listener
   Following snippet executes when there is a post message
   event from =openedx= web-site
#+NAME: post-message-event-listner
#+BEGIN_SRC javascript 
window.loggedInState = false;
window.bk_btn_flag = false;
window.all_inst_flag = false;
window.lab_url = "";
if (window.addEventListener) {
    window.addEventListener("message", processPostMessage, false);
}
else {
    window.attachEvent("onmessage", processPostMessage);
}

#+END_SRC
** Validate Authentication
   This function validates the user authentication before
   lab gets loaded. If user is already authenticated it
   loads the lab url directly otherwise it prompts for user
   login page then redirects to lab url
#+NAME: validate-authentication
#+BEGIN_SRC javascript 
var validateAuthentication = function(url) {
  var lab_url = url.id;
  var iframe = parent.document.getElementById("contentIframe");
  if(parent.window.loggedInState == false) {
    parent.window.lab_url = lab_url;
    iframe.src = hosted_base + "/login";
  } else {
    iframe.src = lab_url;
  }
};

#+END_SRC
** Toggle Login/Logout buttion 
   This function toggles the login/logout buttons
   accordingly based on cookie value.  This is required to
   recreate the existing state when user accesses the
   landing pages from another tab or when a post message
   arrives on a successful login.

   A cookie maintains the status of the session as a key
   value pair where key is =session_status= and value is
   either =logged-in= or =logged-out=. 

#+NAME: toggle-log-btns
#+BEGIN_SRC javascript 
function toggleBtns(){
  if(document.cookie.includes("logged-in")){
    window.loggedInState = true;
    var loginDiv = document.getElementById("login");
    loginDiv.innerHTML = "Logout";
    loginDiv.setAttribute( "onClick", "setLoginUrlInContentIframe('logout')" );
    var register_elem = document.getElementById("register");
    register_elem.style.display = "none";

  }
  else if(document.cookie.includes("logged-out")){
    window.loggedInState = false;
    document.getElementById("login").innerHTML = "Login";
    document.getElementById("login").setAttribute( "onClick", "setLoginUrlInContentIframe('login')" );
  }
  else{
    console.log("");
  }
}

#+END_SRC
** Check Post message

   Post messages are sent in two scenarios:
   1. When the route =/dashboard= is accessed from Open
      edX.  This route is invoked on a successful login and 
   2. When back button is pressed

   This function processess the post message.  

   Case 1 : When the post message is from Open edX,
   =session-status= of the browser cookie is set to
   =logged-in= and the buttons are toggled.

   Case 2 : When the message is due to pressing of a back
   button, the approprite page is loaded based the previous
   state.

#+NAME: process-post-message
#+BEGIN_SRC javascript 
function processPostMessage(evt) {

  var post_msg = evt.data.toLocaleLowerCase();

  if (post_msg.indexOf("my courses") != -1) {
    document.cookie = "session-status='logged-in'";
    if (window.lab_url == "") {
      loadAllDisciplines();
    }
    else {
      var iframe = document.getElementById("contentIframe");
      iframe.src = window.lab_url;
    }
  } else {
    handlePostForBackBtn(post_msg);
  }

  toggleBtns();

  var handlePostForBackBtn = function(postMsg) {
    var toggleBackButtonFlag = function(loadF) {
      if(window.bk_btn_flag == false){
        window.bk_btn_flag = true;
        console.log("==========true case=======");
        console.log(window.bk_btn_flag);
      }
      else
      {
        window.bk_btn_flag = false;
        console.log("==========false case=======");
        console.log(window.bk_btn_flag);
        loadF();
      }
    };
    
    if(post_msg.indexOf("all-disciplines") !=-1 ) {
      toggleBackButtonFlag(loadAllDisciplines);
    }
    else if(post_msg.indexOf("all-institutes") !=-1 ) {
      toggleBackButtonFlag(loadAllInstitutes);
    }
    else if(post_msg.indexOf("all-labs") !=-1 ){
      toggleBackButtonFlag(loadAllDisciplines);
    }
  };
};

#+END_SRC
** Configure post message script inside openedx server
   Following code snippet is to be configured in =openedx=
   server. This is required to send the post messages to
   destination server. Place the following snippet inside
   =/edx/var/nginx/server-static/message.html=
#+BEGIN_SRC html
<html>
  <head>
    <script>
      var postM = function() {
      textOfContentIframe = document.body.innerText;
      console.log("Sender message: " + textOfContentIframe);
      //console.log("Referrer: " + document.referrer);
      msg = window.parent.postMessage(textOfContentIframe, "http://header.vlabs.ac.in");
      };
    </script>
  </head>
  <body onload="postM();">
  </body>
</html>
#+END_SRC
In above code snippet =http://header.vlabs.ac.in= is the
server name where all post messages will be sent. Configure
the =nginx= server file in =/etc/nginx/sites-enabled/lms= to
sent post messages script
#+BEGIN_EXAMPLE
location @proxy_to_lms_app {
   add_after_body /server/message.html;
   --------------
   -------------
#+END_EXAMPLE

* Tangle 
** sources
*** Javascript
**** Main JS
#+BEGIN_SRC javascript :tangle js/auth.js :eval no :noweb yes 
<<post-message-event-listner>>
<<set-register-url-to-content-iframe>>
<<set-login-url-to-content-iframe>>
<<validate-authentication>>
<<toggle-btns>>
<<process-post-message>>
#+END_SRC
