#+TITLE: Authentication
#+AUTHOR: VLEAD
#+DATE: <2017-04-06 Thu>
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-1.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export

* Introduction
  This has functionality to provide authentication to
  =vlabs-landing-pages=
* Authentication
** Set Login url to content iframe
   By default on page loads =contentIframe= is set to load
   all the disciplines. This is to be replaced with login
   url of the OpenEdx when user clicks on =Login= button
   from the header division
#+NAME: set-login-url-to-content-iframe
#+BEGIN_SRC javascript 
var setLoginUrlInContentIframe = function(event) {
  console.log("=======setting login url to content iframe=====");
  var iframe = document.getElementById("contentIframe");
  iframe.sandbox = 'allow-scripts allow-same-origin allow-popups allow-forms';
  if(event == "login"){
    iframe.src = openedx_url + "/login";
  }
  else{
    iframe.src = openedx_url + "/logout";
  }
};

#+END_SRC
** Set user registration url to content iframe
   This function sets =contentIframe= to the registration
   url of an openedx platform when a user clicks on
   =Register= button from header
#+NAME: set-register-url-to-content-iframe
#+BEGIN_SRC javascript 
var setRegisterUrlInContentIframe = function() {
  console.log("=======setting registration url to content iframe=====");
  var iframe = document.getElementById("contentIframe");
  iframe.src = openedx_url + "/register";
  iframe.sandbox = 'allow-scripts allow-same-origin allow-popups allow-forms';
};

#+END_SRC
** Post message event listener
   Following snippet executes when there is a post message
   event from =openedx= web-site
#+NAME: post-message-event-listner
#+BEGIN_SRC javascript 
window.loggedin_handler = false;
window.all_disc_flag = false;
window.all_inst_flag = false;
window.lab_url = "";
if (window.addEventListener) {
    window.addEventListener("message", validatePostMessage, false);
}
else {
    window.attachEvent("onmessage", validatePostMessage);
}

#+END_SRC
** Validate Authentication
   This function validates the user authentication before
   lab gets loaded. If user is already authenticated it
   loads the lab url directly otherwise it prompts for user
   login page then redirects to lab url
#+NAME: validate-authentication
#+BEGIN_SRC javascript 
var validateAuthentication = function(url) {
  var lab_url = url.id;
  var loggedinHandler = parent.window.loggedin_handler;
  var iframe = parent.document.getElementById("contentIframe");
  if(loggedinHandler == false){
    parent.window.lab_url = lab_url;
    iframe.src = openedx_url + "/login";
  }
  else{
    iframe.src = lab_url;
  }
};

#+END_SRC
** Validate the cookie
   This function validates the browser cookie and toggles
   the login/logout buttons accordingly based on cookie
   value. 
   - If the =session_status= of the cookie is set to
     =loggedin= then =Logout= button will appear and it
     hides the =Registration= button.
   - If the cookie is set to =session_status=loggedout= then
     =Login= and =Registration= button will be appeared
#+NAME: validate-cookie
#+BEGIN_SRC javascript 
function validateCookie(){
  if(document.cookie.includes("logged in")){
    window.loggedin_handler=true;
    var loginDiv = document.getElementById("login");
    loginDiv.innerHTML = "Logout";
    loginDiv.setAttribute( "onClick", "setLoginUrlInContentIframe('logout')" );
    var register_elem = document.getElementById("register");
    register_elem.style.display = "none";

  }
  else if(document.cookie.includes("logged out")){
    window.loggedin_handler = false;
    document.getElementById("login").innerHTML = "Login";
    document.getElementById("login").setAttribute( "onClick", "setLoginUrlInContentIframe('login')" );
  }
  else{
    console.log("");
  }
}

#+END_SRC
** Validate post message
   This function evaluates the post message which is being
   sent from =openedx= website and sets the browser cookie
   to either =session_status=logged in= or
   =session_status=logged out= based on post message data.
   - If post message contains sub string =MY COURSES= then
     cookie sets to =session_status=logged in=
   - If post message contains sub string =Welcome to the
     Open= then cookie sets to =session_status=logged out=
#+NAME: validate-post-message
#+BEGIN_SRC javascript 
function validatePostMessage(evt) {
  //  alert(evt.origin);
  if (evt.origin != "http://localhost:8000") {
    console.log("Unauthorized domain");
  }
  else {
    if (evt.data.indexOf("MY COURSES") != -1){
      document.cookie = "session_status='logged in'";
      if (window.lab_url == ""){
        loadAllDisciplines();
      }
      else{
        var iframe = document.getElementById("contentIframe");
        iframe.src = window.lab_url;
      }
    }
    else if (evt.data.indexOf("Welcome to the Open")!= -1){
      document.cookie = "session_status='logged out'";
      loadAllDisciplines();
      var loginDiv = document.getElementById("login");
      loginDiv.innerHTML = "Login";
      loginDiv.setAttribute( "onClick", "setLoginUrlInContentIframe('login')" );
      var register_elem = document.getElementById("register");
      register_elem.style.display = "block";
    }
    else if(evt.data.indexOf("all-disciplines")!=-1 ){
      if(window.all_disc_flag == false){
        window.all_disc_flag = true;
        console.log("==========true case=======");
        console.log(window.all_disc_flag);
      }
      else
      {
        window.all_disc_flag = false;
        console.log("==========false case=======");
        console.log(window.all_disc_flag);
        loadAllDisciplines();
      }
    }
    else if(evt.data.indexOf("all-institutes")!=-1 ){
      if(window.all_disc_flag == false){
        window.all_disc_flag = true;
        console.log("==========true case=======");
        console.log(window.all_disc_flag);
      }
      else
      {
        window.all_disc_flag = false;
        console.log("==========false case=======");
        console.log(window.all_disc_flag);
        loadAllInstitutes();
      }
    }
    else if(evt.data.indexOf("all-labs")!=-1 ){
      if(window.all_disc_flag == false){
        window.all_disc_flag = true;
        console.log("==========true case=======");
        console.log(window.all_disc_flag);
      }
      else
      {
        window.all_disc_flag = false;
        console.log("==========false case=======");
        console.log(window.all_disc_flag);
        loadAllDisciplines();
      }
    }
    validateCookie();
  }
}

#+END_SRC
** Configure post message script inside openedx server
   Following code snippet is to be configured in =openedx=
   server. This is required to send the post messages to
   destination server. Place the following snippet inside
   =/edx/var/nginx/server-static/message.html=
#+BEGIN_SRC html
<html>
  <head>
    <script>
      var postM = function() {
      textOfContentIframe = document.body.innerText;
      console.log("Sender message: " + textOfContentIframe);
      //console.log("Referrer: " + document.referrer);
      msg = window.parent.postMessage(textOfContentIframe, "http://header.vlabs.ac.in");
      };
    </script>
  </head>
  <body onload="postM();">
  </body>
</html>
#+END_SRC
In above code snippet =http://header.vlabs.ac.in= is the
server name where all post messages will be sent. Configure
the =nginx= server file in =/etc/nginx/sites-enabled/lms= to
sent post messages script
#+BEGIN_EXAMPLE
location @proxy_to_lms_app {
   add_after_body /server/message.html;
   --------------
   -------------
#+END_EXAMPLE

* Tangle 
** sources
*** Javascript
**** Main JS
#+BEGIN_SRC javascript :tangle js/auth.js :eval no :noweb yes 
<<post-message-event-listner>>
<<set-register-url-to-content-iframe>>
<<set-login-url-to-content-iframe>>
<<validate-authentication>>
<<validate-cookie>>
<<validate-post-message>>
#+END_SRC
