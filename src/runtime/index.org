#+TITLE: Runtime
#+AUTHOR: VLEAD
#+DATE: [2017-04-06 Thursday]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-1.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export

* Introduction 
  :PROPERTIES:
  :CUSTOM_ID: introduction
  :END: 
  This "Literate Document" is an illustration of building
  =Vlabs landing Pages=. It includes updating the data in
  the web page, using =Lab Data Service=. This helps us
  achieve a lot of tasks, Some of them are mentioned below
  - It explains the approach to access the data of labs that
    are segregated based on institutes.
  - It explains the approach to access the data of labs that
    are segregated based on disciplines.
  - Accessing all the data of labs.

* Implementation
** Index page on load 
   An index initially loads with a header, discipline
   content and footer set the content in respective iframe
   by invoking, =setContentInIframe()=,
   =setFooterContentInIframe()= functions. This function
   also makes a parallel request to get the labs and updates
   the global variable =labs_data=.

#+NAME: load-index
#+BEGIN_SRC js

var labs_data = null;
var labs_data_db = null;
var loadIndex = function() {
  console.log("=======loading index page=====");
  getAllInstitutesInCombobox(); 
  getAllDisciplinesInCombobox(); 
  on_mouse_hover();
  getWorkshopUsage();
  getTotalUsage();
  insertContentIFrame();
  if (labs_data == null)
  {
    getAllLabs();
  }
  loadAllDisciplines();
  insertFooterIFrame();
  setFooterContentInIframe();
};

#+END_SRC
** Create a frame
   Provide the attributes, and an iframe is created and
   returned.  The attributes are name, id, width and height
   of the frame.
#+NAME: create-new-iframe
#+BEGIN_SRC javascript 
var createNewIframe = function(name, id, width, height) {
  console.log("=======creating new frame=====");
  var newIframe = document.createElement("iframe");
  newIframe.setAttribute("width", width);
  newIframe.setAttribute("height", height);
  newIframe.setAttribute("frameBorder", "0");
  newIframe.name = name;
  newIframe.id = id;
  return newIframe;
};

#+END_SRC

** Insert a Frame in a Division
   Given a division, and an iframe, the iframe is inserted
   in the division.
#+NAME: insert-frame-in-division
#+BEGIN_SRC javascript 
var insertFrameInDivision = function(iframe, divId) {
  console.log("=======inserting iframe in division=====");
  var divElem = parent.document.getElementById(divId);
  divElem.appendChild(iframe);
};

#+END_SRC

** Delete Frame from a Division
   Given a frame and a division, an iframe within the
   division is deleted.
#+NAME: delete-frame-in-division
#+BEGIN_SRC javascript 
var deleteFrameInDivision = function(frameId, divId) {
  console.log("=======inside delete frame=====");
  if (parent.document.getElementById(divId).hasChildNodes()) {
    var frameElem = parent.document.getElementById(frameId);
    if (frameElem !== null) {
      frameElem.parentNode.removeChild(frameElem);
      console.log("======deleted====");
    }
  }
};

#+END_SRC

** Creating the header iframe
   This defines a header which is created as an iframe for a
   html page represents a container for introductory content
   or a set of navigational links to another iframe.
#+NAME: insert-header-iframe
#+BEGIN_SRC javascript 
var insertHeaderIFrame = function() {
  console.log("=======creating header iframe=====");
  var newFrame = createNewIframe("headerIframe", "headerIframe", "100%", "450em");
  var division = document.getElementById("headerDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Set usage in Iframe
    This allows to manipulate usage data in the content iframe. The
  usage data will be  set in the content iframe immediately.
#+NAME: set-usage-in-iframe
#+BEGIN_SRC javascript 
var setUsageInIframe = function() {
  console.log("=======setting usage to content iframe=====");        
  var iframe = parent.document.getElementById("contentIframe");
  iframe.src = "https://info.vlabs.ac.in/analytics/analytics/usage.html";
};

#+END_SRC
** Validate cookie
   Following function validates the cookie and changes the
   login/logout buttons accordingly
#+NAME: validate-cookie
#+BEGIN_SRC javascript 

function validateCookie(){
  if(document.cookie.includes("logged in")){
    window.loggedin_handler=true;
    var loginDiv = document.getElementById("login");
    loginDiv.innerHTML = "Logout";
    loginDiv.setAttribute( "onClick", "setLoginUrlInContentIframe('logout')" );
    var register_elem = document.getElementById("register");
    register_elem.style.display = "none";

  }
  else if(document.cookie.includes("logged out")){
    window.loggedin_handler=false;
    document.getElementById("login").innerHTML = "Login";
    document.getElementById("login").setAttribute( "onClick", "setLoginUrlInContentIframe('login')" );
  }
  else{
    console.log("");
  }
}

#+END_SRC
** Configure post message script inside openedx server
   - Following code snippet is to be configured in =openedx=
     server. This is required to send the post messages to
     destination server.
   - Place the following snippet inside
     =/edx/var/nginx/server-static/message.html=
    #+BEGIN_SRC html
    <html>
      <head>
        <script>
          var postM = function() {
          textOfContentIframe = document.body.innerText;
          console.log("Sender message: " + textOfContentIframe);
          console.log("Referrer: " + document.referrer);
          msg = window.parent.postMessage(textOfContentIframe, "http://header.vlabs.ac.in");
          };

        </script>
      </head>
      <body onload="postM();">
      </body>
    </html>
    #+END_SRC
   - In above code snippet =http://header.vlabs.ac.in= is
     the server name where all post messages will be sent
   - Configure the =nginx= server file in
     =/etc/nginx/sites-enabled/lms= to sent post messages script
     #+BEGIN_EXAMPLE
     location @proxy_to_lms_app {
        add_after_body /server/message.html;
        --------------
        -------------
     #+END_EXAMPLE
** Validate post message
   Following function evaluates the post message which is
   being sent from =openedx= website and sets the session
   cookie based on login/logout actions
#+NAME: validate-post-message
#+BEGIN_SRC javascript 

function validatePostMessage(evt) {
  if (evt.origin !== "http://themeless.vlabs.ac.in") {
    console.log("Unauthorized domain");
  }
  else {
    if (evt.data.indexOf("MY COURSES") != -1){
      document.cookie = "session_status='logged in'";
      if (window.lab_url == ""){
        loadAllDisciplines();
      }
      else{
        var iframe = document.getElementById("contentIframe");
        iframe.src = window.lab_url;
      }
    }
    else if (evt.data.indexOf("Welcome to the Open")!= -1){
      document.cookie = "session_status='logged out'";
      loadAllDisciplines();
      var loginDiv = document.getElementById("login");
      loginDiv.innerHTML = "Login";
      loginDiv.setAttribute( "onClick", "setLoginUrlInContentIframe('login')" );
      var register_elem = document.getElementById("register");
      register_elem.style.display = "block";

    }
    else {
      console.log("");
    }
    validateCookie();
  }
}

#+END_SRC
** Validate Authentication
   Following function validates the authentication on every
   click on lab url. If user is authenticated it redirects
   to lab url directly otherwise it prompts for login page
   then redirects to lab url
#+NAME: validate-authentication
#+BEGIN_SRC javascript 

var validateAuthentication = function(url) {
  var lab_url = url.id;
  var loggedinHandler = parent.window.loggedin_handler;
  var iframe = parent.document.getElementById("contentIframe");
  if(loggedinHandler == false){
    parent.window.lab_url = lab_url;
    iframe.src = openedx_url + "/login";
  }
  else{
    iframe.src = lab_url;
  }
};

#+END_SRC
** Set register url to content iframe
   This function sets the registration url of an openedx
   platform to =contentIframe=
#+NAME: set-register-url-to-content-iframe
#+BEGIN_SRC javascript 
var setRegisterUrlInContentIframe = function() {
  console.log("=======setting registration url to content iframe=====");
  var iframe = document.getElementById("contentIframe");
  iframe.src = openedx_url + "/register";
  iframe.sandbox = 'allow-scripts allow-same-origin allow-popups allow-forms';
};

#+END_SRC
** Post message event listener
   Following snippet executes when there is a post message
   event from =openedx= web-site
#+NAME: post-message-event-listner
#+BEGIN_SRC javascript 
window.loggedin_handler=false;
window.lab_url = "";
if (window.addEventListener) {
    // For standards-compliant web browsers                                                                                                                                  
    window.addEventListener("message", validatePostMessage, false);
}
else {
    window.attachEvent("onmessage", validatePostMessage);
}

#+END_SRC

** Set Login url to content iframe
   This function sets the login url of an openedx to
   =contentIframe=.
#+NAME: set-login-url-to-content-iframe
#+BEGIN_SRC javascript 

var setLoginUrlInContentIframe = function(event) {
  console.log("=======setting login url to content iframe=====");
  var iframe = document.getElementById("contentIframe");
  if(event == "login"){
    iframe.src = openedx_url + "/login";
    iframe.sandbox = 'allow-scripts allow-same-origin allow-popups allow-forms';
  }
  else{
    iframe.src = openedx_url + "/logout";
    // parent.window.loggedin_handler = false;
    // parent.document.cookie = "session_status='logged out'";
    // var loginDiv = document.getElementById("login");
    // loginDiv.innerHTML = "Login";
    // loginDiv.setAttribute( "onClick", "setLoginUrlInContentIframe('login')" );
    // var register_elem = document.getElementById("register");
    // register_elem.style.display = "block"
    // loadAllDisciplines();
  }
};

#+END_SRC
** Set Lab Data
   This function sets the lab data from a global variable
   =labs_data= to an iframe. 
#+NAME: set-lab-data-in-iframe
#+BEGIN_SRC js
var setLabDataInIframe = function() {
  var iframe = parent.document.getElementById("contentIframe");
  iframe.sandbox = 'allow-forms allow-scripts allow-same-origin';
  var content = iframe.contentWindow.document;
//  console.log(content);
  content.body.innerHTML = "";
  content.write(labs_data);
  addScriptTags();  
};

#+END_SRC

** Creating the content iframe
   Displays the content iframe based on the selection of the
   elements with respect to the header iframe.
#+NAME: insert-content-iframe
#+BEGIN_SRC javascript 
var insertContentIFrame = function() {
  console.log("=======creating content iframe=====");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "9500em");
  var division = document.getElementById("contentDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Creating the footer iframe
   This defines a footer which is created as an iframe for a
   html page. A footer includes information about its
   containing element. It typically contains: authorship
   information.
#+NAME: insert-footer-iframe
#+BEGIN_SRC javascript 
var insertFooterIFrame = function() {
  console.log("=======creating footer iframe=====");
  var newFrame = createNewIframe("footerIframe", "footerIframe", "100%", "390em");
  var division = document.getElementById("footerDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Set content in footer iframe
   Once the footer iframe is created to display the footer
   we give =http://footer.vlabs.ac.in/footer= as source of
   the iframe. The content of the footer will be dynamically
   served from the footer service.
#+NAME: set-footer-content-in-iframe
#+BEGIN_SRC javascript
var setFooterContentInIframe=function() {
  console.log("=======setting footer in iframe=====");
  var iframe = document.getElementById("footerIframe");
  iframe.src = "http://footer.vlabs.ac.in/footer";
};

#+END_SRC

** Insert Frame
   Insert a frame in the =dis_iframe= division.  The name
   and id of this frame is =iframe1=.
#+NAME: insert-frame
#+BEGIN_SRC javascript 
var insertFrame = function() {
  console.log("=======insert iframe=====");
  var newFrame = createNewIframe("iframe1", "iframe1", "100%", "1200");
  var division = document.getElementById('dis_iframe');
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Loading all disciplines
   This allows to manipulate the content of an iframe by
   invoking =getAllDisciplines()= function and set the
   obtained disciplines by invoking =setContentInIframe()=
   in the content iframe.
#+NAME: load-all-disciplines
#+BEGIN_SRC javascript 
var loadAllDisciplines = function() {
  console.log("=======loading all disciplines=====");
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "1180em");
  insertFrameInDivision(newFrame, "contentDiv");
  getAllDisciplines();
};

#+END_SRC

** Loading all institutes
   This allows to manipulate the content of an iframe by
   invoking =getAllInstitutes()= function and set the
   obtained institutes by invoking =setContentInIframe()= in
   the content iframe.

#+NAME:load-all-institutes
#+BEGIN_SRC javascript 
var loadAllInstitutes = function() {
  console.log("=======loading all institutes=====");
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "790em");
  insertFrameInDivision(newFrame, "contentDiv");
  getAllInstitutes();
};

#+END_SRC

** Loading all labs
   This allows to manipulate the content of an iframe by
   invoking =getAllLabs()= function and set the obtained
   labs by invoking =setContentInIframe()= in the content
   iframe.
#+NAME: load-all-labs
#+BEGIN_SRC javascript 
var loadAllLabs = function() {
  console.log("=======loading all labs=====");
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "9500em");
  insertFrameInDivision(newFrame, "contentDiv");
  var labs = getAllLabs();
  setLabDataInIframe();
};

#+END_SRC

** Change the content of an iframe
   Sometimes it might be handy to manipulate the contents of
   an iframe by accessing the elements within the iframe.
   We show this by loading a =welcome.html= as source of the
   iframe. The content of the newly created iframe cannot be
   set immediately, therefore we wait for some time and then
   set the content of the newly created frame.

#+NAME: set-content
#+BEGIN_SRC javascript 
var setContent = function() {
  console.log("=======setting content=====");      
  var iframe = parent.document.getElementById("disiframe");
  var content = iframe.contentWindow.document;
};

var setContentInIframe = function() {
  console.log("=======setting content to content iframe=====");        
  var iframe = parent.document.getElementById("contentIframe");
  iframe.src = "./content.html";
};

var setNewContentInIframe = function(data) {
  console.log("=======setting new content to content iframe=====");        
  var iframe = parent.document.getElementById("contentIframe");
  iframe.sandbox = 'allow-forms allow-scripts allow-same-origin allow-popups';
//  console.log("element = " + iframe);
  try {
    cnt = iframe.contentDocument;
 //   console.log("cnt: " +  cnt);
    cnt.write(data);
  } catch(err) {
    console.log(err);
//    setNewContentInIframe(data);
  }
  
};

#+END_SRC

** Get All Institutes
   This function will be invoked when =All Institutes= tab
   is clicked. It invokes a call to =LDS= database and
   fetches all the institutes info and calls
   =setNewContentInIframe()= function to display the data in
   an iframe. Also calls =addScriptTags()= function to
   append =main.js=, =jquery= and =app-config= to =<head>=
   tag as =<script>=.

#+NAME: get-all-institutes
#+BEGIN_SRC javascript 
var getAllInstitutes = function(){ 
  console.log("=========inside get all institutes==========");
  var institute_url = lds_url+"/institutes";
//  console.log(institute_url);
  $.getJSON(institute_url, function(data) {
    var institutes = '';
    $.each(data, function(key, value){
      var institute_name = value['institute_name'];
      var image_name = value['assets'][0]['path'];
      var image_path = institute_images_url + image_name;

institutes += '<div class="col-lg-3 col-md-4 col-xs-12 thumb" \
 onclick="getLabsByInstituteName(this, 0)" src="' + image_path +'" id="' + institute_name +
      '"><div class="thumbnail" \
style="cursor:pointer; padding: 0px !important; padding-top:15px \
!important;"> <a><img class="img-responsive " \
onclick="getLabsByInstituteName(this, 0)" src="' + image_path +'" id="' + institute_name +
      '"><div class="caption" style="min-height: 110px;">\
<h4 onclick="getLabsByInstituteName(this, 0)"  src="' + image_path +'" id="' + institute_name +
      '" style="text-align:center; color:#2c99ce;" >'+ institute_name +'</h4></a></div></div></div>';
          });

    var institute_list = '<div class="container-fluid"><div class="row">'
        + institutes +'</div></div>';
//    console.log(institutes);
    setNewContentInIframe(institute_list);
    addScriptTags();
  })
    .done(function() {
//      console.log( "second success" );
    })
    .fail(function() {
//      console.log( "error" );
    })
    .always(function() {
//      console.log( "complete" );
    });
};

#+END_SRC
** Get All Disciplines
   This function will be invoked when =All Disciplines= tab
   is clicked. It invokes a call to =LDS= database and
   fetches all the disciplines info and calls
   =setNewContentInIframe()= function to display the data in
   an iframe. Also calls =addScriptTags()= function to
   append =main.js=, =jquery= and =app-config= to =<head>=
   tag as =<script>=.
#+NAME: get-all-disciplines
#+BEGIN_SRC javascript 
var getAllDisciplines = function(){ 
  console.log("=========inside get all disciplines==========");
  var dis_url = lds_url+"/disciplines";
//  console.log(dis_url);
  $.getJSON(dis_url, function(data) {
    var disciplines = '';
    $.each(data, function(key, value){
    var discipline_name = value['discipline_name'];
    var image_name = value['assets'][0]['path'];
    var image_path = discipline_images_url + image_name;
     disciplines += '<div class="col-lg-3 col-md-4 col-xs-12 thumb"  \
 onclick="getLabsByDisciplineName(this, 0)" src="'
    + image_path +'" id="' + discipline_name + '"> <div class="thumbnail"  \
style="cursor: pointer; padding: 0px !important; padding-top:15px !important;"> <a><img class="img-responsive" onclick="getLabsByDisciplineName(this, 0)" src="'
    + image_path +'" id="' + discipline_name + '"style="cursor: pointer;"> \
<div class="caption" style="min-height: 110px;">\
<h4 onclick="getLabsByDisciplineName(this, 0)"  src="' + image_path +'" id="' + discipline_name +
      '" style="text-align:center; color:#2c99ce;" >'+ discipline_name +'</h4></a></div></div></div>';
    });
    var discipline_list = '<div class="container-fluid"><div class="row">'
    + disciplines +'</div></div>';
    
//    console.log(disciplines);
    setNewContentInIframe(discipline_list);
    addScriptTags();
    })
    .done(function() {
//    console.log( "second success" );
    })
    .fail(function() {
//    console.log( "error" );
    })
    .always(function() {
//    console.log( "complete" );
    });
    };
    
#+END_SRC
** Get All Labs
   This function will be invoked when =All Labs= tab is
   clicked. It invokes a call to =LDS= database and fetches
   all the labs info and calls =setNewContentInIframe()=
   function to display the data in an iframe. Also calls
   =addScriptTags()= function to append =main.js=, =jquery=
   and =app-config= to =<head>= tag as =<script>=.   
#+NAME: get-all-labs
#+BEGIN_SRC  javascript 
var getAllLabs = function(){ 
  console.log("=========inside get all labs==========");
  var lab_url = lds_url+"/labs";
//  console.log(lab_url);
  $.getJSON(lab_url, function(data) {
    var labs = '';
    $.each(data, function(key, value){
      var lab_name = value['lab_name'];
      var hosting_info = value['hosting_info'];
      for(var i=0;i< hosting_info.length;i++){
        var hosted_on = value['hosting_info'][i]['hosted_on'];
        if (hosting_info.length == 1){
          var hosted_url = value['hosting_info'][0]['hosted_url'];
        }
        else if(labs_hosted_platform == hosted_on)
        {
           hosted_url = value['hosting_info'][i]['hosted_url'];
        }
        else
        {
          continue;
        }
        
      }
      var assets = value['assets'];
//      console.log(assets);
      for(i=0;i< assets.length;i++){
        var  asset_type = value['assets'][i]['asset_type']['asset_type'];
        var path = value['assets'][i]['path'];
        if (asset_type == 'image'){
          var image_name = value['assets'][i]['path'];
//          console.log(image_name);
           path = lab_images_url + image_name;
//          console.log(path);
        }
      }
      labs += '<div class=" col-md-3 " id='+ lab_name +
        '> <div class="thumbnail" style="cursor:pointer; padding: 0px !important;"><a><img class="img-responsive " \
onclick="javascript:validateAuthentication(this)" src="' + path +'" id="' + hosted_url +
      '"><div class="caption" style="min-height: 110px;">\
<h4 onclick="javascript:validateAuthentication(this)"  src="' + path +'" id="' + hosted_url +
        '" style="text-align:center; color:#2c99ce;" >'+ lab_name +'</h4></a></div></div></div>';
    });
//    console.log(labs);
    var labs_list = '<div class="container-fluid"><div class="row">'+ labs +'</div></div>';
    labs_data = labs_list;
//    console.log(labs_data);
    labs_data_db = data;
    var all_labs_element = document.getElementById("allLabs");
    all_labs_element.classList.remove("disabled");
    var search_element = document.getElementById("search");
    search_element.classList.remove("disabled");
    addScriptTags();
  })
    .done(function() {
//      console.log( "second success" );
    })
    .fail(function() {
//      console.log( "error" );
    })
    .always(function() {
//      console.log( "complete" );
    });
};

 #+END_SRC
** Get Lab
#+NAME: get-lab
#+BEGIN_SRC javascript
var getLab = function(url){
    validateAuthentication(url);
    //hosted_url = url.id;    
    //var iframe = parent.document.getElementById("contentIframe");
    //iframe.src = hosted_url;
    addScriptTags();
};

#+END_SRC
** Get Labs by Discipline Name
   =getAllDisciplines()= function will invokes this
   function. This function dynamically fetches the labs
   based on the 'click' event occurs on discipline
   name. This function also invokes
   =resetContentInIframe(data)= function to replace
   currently available content with the given =data=.

#+NAME: get-labs-by-discipline-name
#+BEGIN_SRC javascript 
var getLabsByDisciplineName = function(image, flag) {
  console.log("===========inside getLabsByDisciplineName==========");
 // console.log("===========flag==========");
//  console.log(flag);
  if (flag==1){
    deleteFrameInDivision("contentIframe", "contentDiv");
    var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "650em");
    insertFrameInDivision(newFrame, "contentDiv");
  }
  var discipline_name = image.id;
  var labs_url = lds_url+"/labs";
//  console.log(labs_url);
  var labs_by_dis_url = labs_url+"?discipline_name="+ discipline_name;
//  console.log(labs_by_dis_url);
  $.getJSON(labs_by_dis_url, function(data) {
    var labs = '';
    $.each(data, function(key, value){
      var lab_name = value['lab_name'];
      var hosting_info = value['hosting_info'];
      for(var i=0;i< hosting_info.length;i++){
        var hosted_on = value['hosting_info'][i]['hosted_on'];
        if (hosting_info.length == 1){
          var hosted_url = value['hosting_info'][0]['hosted_url'];
        }
        else if(labs_hosted_platform == hosted_on)
        {
          hosted_url = value['hosting_info'][i]['hosted_url'];
        }
        else
        {
          continue;
        }
        
      }
      var assets = value['assets'];
//      console.log(assets);
      for(var i=0;i< assets.length;i++){
        var  asset_type = value['assets'][i]['asset_type']['asset_type'];
        var path = value['assets'][i]['path'];
        if (asset_type == 'image'){
          var image_name = value['assets'][i]['path'];
//          console.log(image_name);
          path = lab_images_url + image_name;
//          console.log(path);
        }
      }

      labs += '<div class=" col-md-3 " id='+ lab_name +
           '> <div class="thumbnail" style="cursor:pointer; padding: 0px !important;"><a><img class="img-responsive " \
onclick="javascript:validateAuthentication(this)" src="' + path +'" id="' + hosted_url +
      '"><div class="caption" style="min-height: 110px;">\
<h4 onclick="javascript:validateAuthentication(this)"  src="' + path +'" id="' + hosted_url +
      '" style="text-align:center; color:#2c99ce;" >'+ lab_name +'</h4></a></div></div></div>';
   });
//    console.log(labs);
    var labs_list = '<div class="container-fluid"><div class="row">'+ labs +'</div></div>';
    resetContentInIframe(labs);
  })
    .done(function() {
//      console.log( "second success" );
    })
    .fail(function() {
//      console.log( "error" );
      location.reload();
    })
    .always(function() {
//      console.log( "complete" );
    });
  
};


#+END_SRC
** Get Labs by Institute Name
   =getAllInstitutes()= function will invokes this
   function.This function dynamically fetches the labs based
   on the 'click' event occurs on institute name.

#+NAME: get-labs-by-institute-name
#+BEGIN_SRC javascript 
var getLabsByInstituteName = function(image, flag) {
  console.log("===========inside getLabsByDisciplineName==========");
//  console.log("===========flag==========");
//  console.log(flag);
  if (flag==1){
    deleteFrameInDivision("contentIframe", "contentDiv");
    var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "650em");
    insertFrameInDivision(newFrame, "contentDiv");
  }
  var institute_name = image.id;
  var labs_url = lds_url+"/labs";
//  console.log(labs_url);
  var labs_by_institute_url = labs_url+"?institute_name="+ institute_name;
  console.log(labs_by_institute_url);
  $.getJSON(labs_by_institute_url, function(data) {
    var labs = '';
    $.each(data, function(key, value){
      var lab_name = value['lab_name'];
      var hosting_info = value['hosting_info'];
      for(var i=0;i< hosting_info.length;i++){
        var hosted_on = value['hosting_info'][i]['hosted_on'];
        if (hosting_info.length == 1){
          var hosted_url = value['hosting_info'][0]['hosted_url'];
        }
        else if(labs_hosted_platform == hosted_on)
        {
          hosted_url = value['hosting_info'][i]['hosted_url'];
        }
        else
        {
          continue;
        }
        
      }
      var assets = value['assets'];
//      console.log(assets);
      for(var i=0;i< assets.length;i++){
        var  asset_type = value['assets'][i]['asset_type']['asset_type'];
        var path = value['assets'][i]['path'];
        if (asset_type == 'image'){
          var image_name = value['assets'][i]['path'];
  //        console.log(image_name);
          path = lab_images_url + image_name;
 //         console.log(path);
        }
      }
      labs += '<div class=" col-md-3 " id='+ lab_name +
           '> <div class="thumbnail" style="cursor:pointer; padding: 0px !important;"><a><img class="img-responsive " \
onclick="javascript:validateAuthentication(this)" src="' + path +'" id="' + hosted_url +
      '"><div class="caption" style="min-height: 110px;">\
<h4 onclick="javascript:validateAuthentication(this)"  src="' + path +'" id="' + hosted_url +
      '" style="text-align:center; color:#2c99ce;" >'+ lab_name +'</h4></a></div></div></div>';

    });
//    console.log(labs);
    var labs_list = '<div class="container-fluid"><div class="row">'+ labs +'</div></div>';
    resetContentInIframe(labs);
  })
  .done(function() {
//      console.log( "second success" );
    })
    .fail(function() {
//      console.log( "error" );
//      location.reload();
    })
    .always(function() {
//      console.log( "complete" );
    });
};

#+END_SRC

** Get All Institutes in Combo box
   =getAllInstitutesInCombobox()= function will invokes this
   function. This function dynamically fetches the labs
   based on the 'hover' event occurs on institute which
   gives a dropdown with all institutes and each institute
   respectively.
#+NAME: get-all-institutes-in-combobox
#+BEGIN_SRC javascript
var getAllInstitutesInCombobox = function(){
  console.log("=========inside get all institutes in combobox==========");
  var institute_url = lds_url+"/institutes";
//  console.log(institute_url);
  $.getJSON(institute_url, function(data) {
    var institutes = '';
    $.each(data, function(key, value){
      var institute_name = value['institute_name'];
      institutes +=  '<li onclick="getLabsByInstituteName(this, 1)" value="'
        + institute_name + '" id="' + institute_name + '"><a >' +
        institute_name + '</a></li>';
    });
    var institute_list = '<li onclick="loadAllInstitutes()">\
<a >All Institutes</a></li>' + institutes;
//    console.log(institute_list);
    $('.filterInstituteComboBox').append(institute_list);
  })
    .done(function() {
//      console.log( "second success" );
    })
    .fail(function() {
//      console.log( "error" );
    })
    .always(function() {
//      console.log( "complete" );
    });
};

#+END_SRC
** Get All Disciplines in Combo box
   =getAllDisciplinesInCombobox()= function will invokes
   this function. This function dynamically fetches the labs
   based on the 'hover' event occurs on discipline which
   gives a dropdown with all disciplines and each discipline
   respectively.
#+NAME: get-all-disciplines-in-combobox
#+BEGIN_SRC javascript
var getAllDisciplinesInCombobox = function(){
  console.log("=========inside get all disciplines in combobox==========");
  var discipline_url = lds_url + "/disciplines";
//  console.log(discipline_url);
  $.getJSON(discipline_url, function(data) {
    var disciplines = '';
    $.each(data, function(key, value){
    var discipline_name = value['discipline_name'];
      disciplines += '<li onclick="getLabsByDisciplineName(this, 1)" value="'
        + discipline_name + '" id="' + discipline_name + '"><a >' +
        discipline_name + '</a></li>';
    });
    var discipline_list = '<li onclick="loadAllDisciplines()">\
<a>All Disciplines</a></li>' + disciplines;
//    console.log(discipline_list);
    $('.filterDisciplineComboBox').append(discipline_list);

    })
    .done(function() {
//    console.log( "second success" );
    })
    .fail(function() {
//    console.log( "error" );
    })
    .always(function() {
//    console.log( "complete" );
    });
    };

#+END_SRC
** Get Labs by Keyword Search 
   This function dynamically fetches the labs based
   on the 'onkeyup' event occurs on lab name.
#+NAME: labs-by-keyword-search
#+BEGIN_SRC javascript
var getLabsByKeyword = function(){
  console.log("=================search labs===========");  
  jQuery.support.cors = true;
  $('#keyword').keypress(function (e) {                                       
    if (e.which == 13) {
      e.preventDefault();
    }
  });
  var keyword = document.getElementById("keyword").value;
//  console.log(keyword);
  var data = [];
//  console.log(labs_data_db);  
  for (var i=0;i<labs_data_db.length;i++) {
    var lab = labs_data_db[i];
    for (var lab_name in lab) {
      var lab_match = lab[lab_name].toString().toLowerCase();
      if (lab_match.indexOf(keyword)>-1) {
        data.push(lab);
        break;               
      }
    }
  }
  var labs='';
  $.each(data, function(key, value){
    var lab_name = value['lab_name'];
    var hosting_info = value['hosting_info'];
    for(var i=0;i< hosting_info.length;i++){
      var hosted_on = value['hosting_info'][i]['hosted_on'];
      if (hosting_info.length == 1){
        var hosted_url = value['hosting_info'][0]['hosted_url'];
      }
      else if(labs_hosted_platform == hosted_on)
      {
        var hosted_url = value['hosting_info'][i]['hosted_url'];
      }
      else
      {
        continue;
      }
        
    }
    var assets = value['assets'];
//    console.log(assets);
    for(i=0;i< assets.length;i++){
      var  asset_type = value['assets'][i]['asset_type']['asset_type'];
      var path = value['assets'][i]['path'];
      if (asset_type == 'image'){
        var image_name = value['assets'][i]['path'];
//        console.log(image_name);
        path = lab_images_url + image_name;
//        console.log(path);
      }
    }
    labs += '<div class=" col-md-3 " style="cursor:pointer;" id='+ lab_name +
           '> <div class="thumbnail" style="padding: 0px !important;"><a><img class="img-responsive " \
onclick="javascript:validateAuthentication(this)" src="' + path +'" id="' + hosted_url +
      '"><div class="caption" style="min-height: 110px;">\
<h4 onclick="javascript:validateAuthentication(this)"  src="' + path +'" id="' + hosted_url +
      '" style="text-align:center; color:#2c99ce;" >'+ lab_name +'</h4></a></div></div></div>';
  });
//  console.log(labs);
  var labs_list = '<div class="container-fluid"><div class="row">'+ labs +'</div></div>';
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "9500em");
  insertFrameInDivision(newFrame, "contentDiv");
  resetContentInIframe(labs);
};

#+END_SRC
** Add Script Tags 
   Script tags are created dynamically and appended to the
   =<head>= tag.

#+NAME: add-script-tags
#+BEGIN_SRC javascript 
var addScriptTags = function(){
  var contentIframe = parent.document.getElementById("contentIframe");
  
  var js_script = contentIframe.contentWindow.document.createElement("script");
  var js_url = "./js/main.js";
  js_script.type = "text/javascript";
  js_script.src = js_url;
  var head = contentIframe.contentWindow.document.head;
//  console.log(head);
  head.appendChild(js_script);
  
  var config_script = contentIframe.contentWindow.document.createElement("script");
  var config_url = "./js/app-config.js";
  config_script.type = "text/javascript";
  config_script.src = config_url;
  head.appendChild(config_script);
  
  var jquery_script = contentIframe.contentWindow.document.createElement("script");
  var jquery_url = "https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js";
  jquery_script.type = "text/javascript";
  jquery_script.src = jquery_url;
  head.appendChild(jquery_script);  

  var styles = contentIframe.contentWindow.document.createElement("link");
  var css_url = "./css/style.css";
  styles.type = "text/stylesheet";
  styles.href = css_url;
  head.appendChild(styles);

  var bootstrap_styles = contentIframe.contentWindow.document.createElement("link");
  var bootstrap_css_url = "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css";
  bootstrap_styles.rel = "stylesheet";
  bootstrap_styles.href = bootstrap_css_url;
  head.appendChild(bootstrap_styles);

  var favicon = contentIframe.contentWindow.document.createElement("link");
  var favicon_url = "";
  favicon.type = "image/x-icon";
  favicon.href = favicon_url;
  head.appendChild(favicon);



};

#+END_SRC

** Resetting content in Iframe
   Resetting the content in the same frame is just element
   manipulation where =contentIframe= is accessed and new
   content is set.
#+NAME: reset-content
#+BEGIN_SRC javascript 
var resetContentInIframe = function(data) {
  console.log("=======re setting content=====");        
//  console.log(data);
  var iframe = parent.document.getElementById("contentIframe");
  iframe.sandbox = 'allow-scripts allow-same-origin allow-popups allow-forms';
  var content = iframe.contentWindow.document;
//  console.log(content);
  content.body.innerHTML="";
  content.write(data);
  addScriptTags();

};

#+END_SRC

** Back button
#+NAME: back-button
#+BEGIN_SRC javascript 
/*bajb_backdetect.OnBack = function()
{
alert('You clicked it!');
}*/
#+END_SRC
** Get Workshop Usage Data 
   This function dynamically fetches the usage data.
#+NAME: workshop-usage-data
#+BEGIN_SRC javascript
var getWorkshopUsage = function(){ 
$.getJSON(workshop_usage_url, function(data) {
  var usage = data["usage"];
  $("#usage").html(usage);
})
    .done(function() {
//      console.log( "second success" );
    })
    .fail(function() {
//      console.log( "error" );
    })
    .always(function() {
//      console.log( "complete" );
    });
};
#+END_SRC
** Total usage data 
   This function dynamically fetches the total usage data.
#+NAME: total-usage-data
#+BEGIN_SRC javascript
var getTotalUsage = function() {
$.getJSON(total_usage_url, function(data) {
  var usage = data["usage"];
  $("#totalusage").html(usage);
})
    .done(function() {
//      console.log( "second success" );
    })
    .fail(function() {
//      console.log( "error" );
    })
    .always(function() {
//      console.log( "complete" );
    });
};
#+END_SRC
** Mouse Over
   This function allows the dropdown menu on the mousehover
   event.
#+NAME: mouse-over
#+BEGIN_SRC javascript
var on_mouse_hover = function(){
$(".dropdown").hover(            
  function() {
    $('.dropdown-menu', this).not('.in .dropdown-menu').stop(true,true).slideDown("400");
    $(this).toggleClass('open');        
  },
  function() {
    $('.dropdown-menu', this).not('.in .dropdown-menu').stop(true,true).slideUp("400");
    $(this).toggleClass('open');       
  }
);
};
#+END_SRC

** style sheets
   Styling for the =Vlabs landing pages= includes in
   maintaining the uniform look across the website.
#+NAME: style-sheets
#+BEGIN_SRC css
@import url(https://fonts.googleapis.com/css?family=Raleway:400,300,700,500,600);
body {
 /* font-family: 'Open Sans', 'sans-serif';*/
 font-family:'Raleway' !important;
}

a{
color:#0d3f6a !important;
text-decoration: none;
}

p{
font-family:'Raleway' !important;
}
.mega-dropdown {
  position: static !important;
}
.mega-dropdown-menu .dropdown-header {
  font-size: 18px;
  font-family:'Raleway' !important;
  color:  #5FB0E4;
  padding: 5px 60px 5px 5px;
  line-height: 30px;
}

.mega-dropdown-menu > li > ul {
    font-family:'Raleway' !important;
    padding: 0;
    margin: 0;
}
.mega-dropdown-menu > li > ul > li {
  list-style: none;
}
.mega-dropdown-menu > li > ul > li > a {
  display: block;
  color: #222;
  padding: 3px 5px;
  font-size:16px;
}
.mega-dropdown-menu > li ul > li > a:hover,
.mega-dropdown-menu > li ul > li > a:focus {
  text-decoration: none;
}

.carousel-control {
  width: 30px;
  height: 30px;
  top: -35px;

}
.left.carousel-control {
  right: 30px;
  left: inherit;
}
.carousel-control .glyphicon-chevron-left, 
.carousel-control .glyphicon-chevron-right {
  font-size: 12px;
  background-color: #fff;
  line-height: 30px;
  text-shadow: none;
  color: #333;
  border: 1px solid #ddd;
}
.contentDiv{
position:absolute;
height:650px;
}
.row {
    margin-right: 0px;
    margin-left: -15px;
}
.text-h3-darkblack-bold {
    font-size: 1.4em;
    font-weight: bold;
}

.navbar-bootsnipp .navbar-nav > li > .dropdown-menu > li > a {
  display: inline-block;
  margin-right: -4px;
  font-size: 14px;
  padding: 0px 20px; !important;
  font-family:'Raleway' !important;
}


/* search placeholder styles */
}
.stylish-input-group .input-group-addon{
    background: white !important; 
}
.stylish-input-group .form-control{
	border-right:0; 
	box-shadow:0 0 0; 
	border-color:#ccc;
}
.stylish-input-group button{
    border:0;
    background:#transperent;
}
/*overwrting the search icon properties from less bootstrap library*/
.input-group-addon {
    
    padding: 0px 0px !important;
    font-size: 0px !important;
    font-weight: 400;
    line-height: 1;
    color: #555;
    text-align: center;
    background-color: #fff !important;
    border: 1px solid #ccc;
    border-left-width: 1px;
    border-left-style: solid;
    border-left-color: rgb(204, 204, 204);
    border-radius: 4px;
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;

}

/* search icon hover color properties */
.btn-default:hover {
    color: #333;
    color: #007db8;
    border-color: #adadad;
    background-color: #fff !important;
}

.thumbnail {
    display: block;
    padding: 0px !important;
    margin-bottom: 20px;
    line-height: 1.42857143;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    
}

.cursor-pointer{cursor: pointer;}

.navbar-default .navbar-nav > li > a:focus, .navbar-default .navbar-nav > li > a:hover
{
color:#5FB0E4 !important;


}

.navbar-default .navbar-nav{
font-size:16px;
}
.dropdown-menu{
cursor: pointer !important;
border-left: 0 solid #5FB0E4 !important;
font-size:16px;
}

/*banner slider*/

/* BOOTSTRAP 3.x GLOBAL STYLES
-------------------------------------------------- */
body {
  padding-bottom: 40px;
  color: #5a5a5a;
}



/* CUSTOMIZE THE NAVBAR
-------------------------------------------------- */

/* Special class on .container surrounding .navbar, used for positioning it into place. */
.navbar-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
}



/* CUSTOMIZE THE CAROUSEL
-------------------------------------------------- */

/* Carousel base class */
.carousel {
 /* margin-bottom: 60px;*/
}
/* Since positioning the image, we need to help out the caption */
.carousel-caption {
  z-index: 1;
}

.carousel-caption{
text-shadow: 0 0px 0px !important ;
}


/* Declare heights because of positioning of img element */
.carousel .item {
  height: 400px;
  background-color:#555;
}
.carousel img {
  position: absolute;
  top: 0;
  left: 0;
  min-height: 400px;
}



/* MARKETING CONTENT
-------------------------------------------------- */

/* Pad the edges of the mobile views a bit */
.marketing {
  padding-left: 15px;
  padding-right: 15px;
}

/* Center align the text within the three columns below the carousel */
.marketing .col-lg-4 {
  text-align: center;
  margin-bottom: 20px;
}
.marketing h2 {
  font-weight: normal;
}
.marketing .col-lg-4 p {
  margin-left: 10px;
  margin-right: 10px;
}


/* Featurettes
------------------------- */

.featurette-divider {
  margin: 80px 0; /* Space out the Bootstrap <hr> more */
}
.featurette {
  padding-top: 120px; /* Vertically center images part 1: add padding above and below text. */
  overflow: hidden; /* Vertically center images part 2: clear their floats. */
}
.featurette-image {
  margin-top: -120px; /* Vertically center images part 3: negative margin up the image the same amount of the padding to center it. */
}

/* Give some space on the sides of the floated elements so text doesn't run right into it. */
.featurette-image.pull-left {
  margin-right: 40px;
}
.featurette-image.pull-right {
  margin-left: 40px;
}

/* Thin out the marketing headings */
.featurette-heading {
  font-size: 50px;
  font-weight: 300;
  line-height: 1;
  letter-spacing: -1px;
}



/* RESPONSIVE CSS
-------------------------------------------------- */

@media (min-width: 768px) {

  /* Remve the edge padding needed for mobile */
  .marketing {
    padding-left: 0;
    padding-right: 0;
  }

  /* Navbar positioning foo */
  .navbar-wrapper {
    margin-top: 20px;
    margin-bottom: -90px; /* Negative margin to pull up carousel. 90px is roughly margins and height of navbar. */
  }
  /* The navbar becomes detached from the top, so we round the corners */
  .navbar-wrapper .navbar {
    border-radius: 4px;
  }

  /* Bump up size of carousel content */
  .carousel-caption p {
    margin-bottom: 20px;
    font-size: 21px;
    line-height: 1.4;
  }

}


#+END_SRC

** Favicon
#+NAME: favicon
#+BEGIN_SRC javascript 
master = window.parent.document;
head = master.getElementsByTagName("head")[0];
favicon = master.createElement("link");
favicon.rel = "shortcut icon";
favicon.type = "image/png";
favicon.href = "http://files.vlabs.ac.in/lds/images/vlabs-logo/favicon.ico";
head.appendChild(favicon);

#+END_SRC

* Tangle 
** sources
*** Javascript
**** Main JS
#+BEGIN_SRC javascript :tangle js/main.js :eval no :noweb yes 
<<post-message-event-listner>>
<<load-index>>
<<get-all-institutes-in-combobox>>
<<set-lab-data-in-iframe>>
<<create-new-iframe>>
<<delete-frame-in-division>>
<<insert-frame-in-division>>
<<insert-content-iframe>>
<<insert-footer-iframe>>
<<set-footer-content-in-iframe>>
<<insert-header-iframe>>
<<insert-frame>>
<<set-content>>
<<get-labs-by-discipline-name>>
<<get-labs-by-institute-name>>
<<reset-content>>
<<add-script-tags>>
<<set-register-url-to-content-iframe>>
<<set-login-url-to-content-iframe>>
<<validate-authentication>>
<<set-usage-in-iframe>>
<<get-all-disciplines-in-combobox>>
<<load-all-disciplines>>
<<load-all-institutes>>
<<load-all-labs>>
<<get-all-institutes>>
<<get-all-disciplines>>
<<get-all-labs>>
<<labs-by-keyword-search>>
<<mouse-over>>
<<back-button>>
<<workshop-usage-data>>
<<total-usage-data>>
<<validate-cookie>>
<<validate-post-message>>
#+END_SRC

*** CSS
#+BEGIN_SRC css :tangle css/style.css :eval no :noweb yes 
<<style-sheets>>
#+END_SRC
