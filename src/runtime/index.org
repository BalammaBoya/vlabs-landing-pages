#+TITLE: Runtime
#+AUTHOR: VLEAD
#+DATE: [2017-04-06 Thursday]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-1.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export

* Introduction 
  :PROPERTIES:
  :CUSTOM_ID: introduction
  :END: 
  This "Literate Document" is an illustration of building
  =Vlabs landing Pages=. It includes updating the data in
  the web page, using =Lab Data Service=. This helps us
  achieve a lot of tasks, Some of them are mentioned below
  - It explains the approach to access the data of labs that
    are segregated based on institutes.
  - It explains the approach to access the data of labs that
    are segregated based on disciplines.
  - Accessing all the data of labs.

* Implementation
** Structure of html
   On Load, this page invokes =loadIndex()= function which
   loads the default header, content, and footer pages in
   place of =headerDiv=, =contentDiv= and =footerDiv=
   divisions.

#+NAME: main-html
#+BEGIN_SRC html 
<!DOCTYPE html>
<html>
  <head>
    <meta content="text/html;charset=utf-8" http-equiv="Content-Type">
    <meta content="utf-8" http-equiv="encoding">
    <link rel="stylesheet" href="../style.css"/>
    <script type="text/javascript" src="../static/js/app-config.js"></script>
    <script type="text/javascript" src="../static/js/main.js"></script>
  </head>
  <body onload="loadIndex()">
    <div id="headerDiv"></div>
    <div id="contentDiv" ></div>
    <div id="footerDiv"></div>
    </body>
</html>

#+END_SRC

** Content HTML
   This is the initial content in content iframe as
   =content.html=
#+NAME: content-html
#+BEGIN_SRC html 

    
<html>
  <head>
<link rel="stylesheet"
        href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script>
      document.domain="localhost"
    </script>
  </head>
  <body>
   <p>Welcome to Virtual Labs</p>
  </body>
</html>



#+END_SRC

** Header
   This represents a container for introductory content or a
   set of navigational links. A header typically contains:
   one or more heading elements, logo or icon. On click of
   institutes, disciplines and labs it invokes
   =loadAllInstitutes()=, =loadAllDisciplines()= and
   =loadAllLabs()= to load data dynamically in the =content
   iframe=
#+NAME: header-html
#+BEGIN_SRC html 
<html>
  <body>
    <header>
      <link rel="stylesheet"
            href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
      <link rel="stylesheet" href="../static/js/bootsnipp.css">
      <link rel="stylesheet" href="../static/css/style.css">
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
      <script type="text/javascript" src="../static/js/app-config.js"></script>
      <script type="text/javascript" src="../static/js/main.js"></script>
      <link rel="stylesheet" href="https://info.vlabs.ac.in/common/header/files/bootsnipp.css">
      <nav class="navbar navbar-fixed-top navbar-bootsnipp animate" role="navigation" style="z-index: 9999999">
        <div class="container">
          <nav class="navbar ">
            <div class="navbar-header">
              <button class="navbar-toggle" type="button" data-toggle="collapse" data-target=".js-navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              <a class="navbar-brand main-logo-a" href="https://vlabs.ac.in" style=" width:100px; height:40px; margin-top:-13px"><img src="https://vlabs.ac.in/static/edx-bootstrap-theme/images/logo.7e034286282a.png" class="img-responsive main-logo" style="width:100%; maring-top:2px;"></a>
            </div>
            <div class="collapse navbar-collapse js-navbar-collapse">
              <ul class="nav navbar-nav">
                <li class="dropdown mega-dropdown">
                  <a onclick="loadAllLabs()" href="#" class="dropdown-toggle"
                     data-toggle="dropdown">All Labs </a>				
                </li>
                <li class="dropdown mega-dropdown">
                  <a onclick="loadAllInstitutes()"  href="#" class="dropdown-toggle"
                     data-toggle="dropdown">All Institutes </a>				
                </li>
                <li class="dropdown mega-dropdown">
                  <a onclick="loadAllDisciplines()" href="#" class="dropdown-toggle"
                  data-toggle="dropdown">All Disciplines </a>				
                </li>
                <li class="dropdown mega-dropdown">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown">About<span class="caret"></span></a>				
                  <ul class="dropdown-menu mega-dropdown-menu">
                    <li class="col-sm-2">
                      <ul>
                        <li class="dropdown-header">Comminity</li>
                        <li><a href="#">Teachers</a></li>
                        <li><a href="#">Developers</a></li>
                        <li><a href="#">Students</a></li>
                      </ul>
                    </li>
                    <li class="col-sm-2">
                      <ul>
                        <li class="dropdown-header">Development</li>
                        <li><a href="#">Virtual Development</a></li>
                     </ul>
                    </li>
                    <li class="col-sm-2">
                      <ul>
                        <li class="dropdown-header">Workshops</li>
                        <li><a href="#">Online</a></li>
                        <li><a href="#">College Cloud Edition</a></li>
                     </ul>
                    </li>
                    <li class="col-sm-3">
                      <ul>
                        <li class="dropdown-header">FAQ</li>
                        <li><a href="#">Virtual Labs</a></li>
                        <li><a href="#">Virtuals
                            College Cloud Edition</a>
                        </li>
                        <li><a href="#">Expression  of Interest for Workshops</a></li>
                      </ul>
                    </li>
                    <li class="col-sm-2">
                      <ul>
                        <li class="dropdown-header">Information</li>
                        <li><a href="#">Announcements</a></li>
                        <li><a href="#">Contact us</a></li>
                        <li><a href="#">2017-summer-intership</a></li>
                      </ul>
                    </li>
                </li>
                </ul>
</li>
</ul>
<ul class="nav navbar-nav navbar-right">
  <form class="navbar-form navbar-left">
    <div class="input-group">
      <input id="keyword" type="text" class="form-control" placeholder="Lab Name">
      <div class="input-group-btn">
        <button onclick="javascript:getLabs()" target="content_iframe" class="btn btn-default" type="submit">
          <i class="glyphicon glyphicon-search"></i>
        </button>
      </div>
    </div>
  </form>
  <li><a href="http://vlabs.ac.in" target="content_iframe"><span class="glyphicon glyphicon-user"></span> Sign Up</a></li>
  <li><a href="#"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>
</ul>
</div>
<!-- /.nav-collapse -->
</nav>
</div>
</header>
</body>
</html>
#+END_SRC
** Config
   Getting data from the lab data service and feeding the
   content iframe. Also getting images of institute,
   disciplines and all labs from file server
#+NAME: app-config
#+BEGIN_SRC javascript
document.domain="localhost";
// update this to base url to lds url where your lds service was running
var base_url = "http://ld.base4.vlabs.ac.in"; 
//  var base_url = "http://localhost:5000"; 
var institute_images_url ="http://files.vlabs.ac.in/lds/images/institutes/";
var discipline_images_url = "http://files.vlabs.ac.in/lds/images/disciplines/";
var lab_images_url = "http://files.vlabs.ac.in/lds/images/labs/";
//set the below variable to "test-openedx" or "openedx"
var labs_hosted_platform = "test-openedx";

#+END_SRC

** Index page on load 
   An index initially loads with a header, content, footer
   iframe and set the content in respective iframe by
   invoking =setHeaderContentInIframe()=,
   =setContentInIframe()=, =setFooterContentInIframe()=
   functions .
#+NAME: load-index
#+BEGIN_SRC javascript 
var loadIndex = function() {
  console.log("=======loading index page=====");
  insertHeaderIFrame();
  setHeaderContentInIframe();
  insertContentIFrame();
  setContentInIframe();
  insertFooterIFrame();
  setFooterContentInIframe();
  mouse_hover();
};

#+END_SRC
** Create a frame
   Provide the attributes, and an iframe is created and
   returned.  The attributes are name, id, width and height
   of the frame.
#+NAME: create-new-iframe
#+BEGIN_SRC javascript 
var createNewIframe = function(name, id, width, height) {
  console.log("=======creating new frame=====");
  var newIframe = document.createElement("iframe");
  newIframe.setAttribute("width", width);
  newIframe.setAttribute("height", height);
  newIframe.setAttribute("frameBorder", "0");
  newIframe.name = name;
  newIframe.id = id;
  return newIframe;
};

#+END_SRC

** Insert a Frame in a Division
   Given a division, and an iframe, the iframe is inserted
   in the division.
#+NAME: delete-frame-in-division
#+BEGIN_SRC javascript 
var insertFrameInDivision = function(iframe, divId) {
  console.log("=======inserting iframe in division=====");
  var divElem = parent.document.getElementById(divId);
  divElem.appendChild(iframe);
};

#+END_SRC

** Delete Frame from a Division
   Given a frame and a division, an iframe within the
   division is deleted.
#+NAME: delete-frame-in-division
#+BEGIN_SRC javascript 
var deleteFrameInDivision = function(frameId, divId) {
  console.log("=======inside delete frame=====");
  if (parent.document.getElementById(divId).hasChildNodes()) {
    var frameElem = parent.document.getElementById(frameId);
    if (frameElem !== null) {
      frameElem.parentNode.removeChild(frameElem);
      console.log("======deleted====");
    }
  }
};

#+END_SRC

** Creating the header iframe
   This defines a header which is created as an iframe for a
   html page represents a container for introductory content
   or a set of navigational links to another iframe.
#+NAME: insert-header-iframe
#+BEGIN_SRC javascript 
var insertHeaderIFrame = function() {
  console.log("=======creating header iframe=====");
  var newFrame = createNewIframe("headerIframe", "headerIframe", "100%", "200em");
  var division = document.getElementById("headerDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Set content in header iframe
   To display a header we give =header.html= as source of
   the iframe. The content of the =header.html= will be set
   immediately
#+NAME: set-header-content-in-iframe
#+BEGIN_SRC javascript 
var setHeaderContentInIframe=function() {
  console.log("=======setting header in iframe=====");
  var iframe = document.getElementById("headerIframe");
  iframe.src = "./header.html";
};

#+END_SRC

** Creating the content iframe
   Displays the content iframe based on the selection of the
   elements with respect to the header iframe.
#+NAME: insert-content-iframe
#+BEGIN_SRC javascript 
var insertContentIFrame = function() {
  console.log("=======creating content iframe=====");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "800");
  var division = document.getElementById("contentDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Creating the footer iframe
   This defines a footer which is created as an iframe for a
   html page. A footer includes information about its
   containing element. It typically contains: authorship
   information.
#+NAME: insert-footer-iframe
#+BEGIN_SRC javascript 
var insertFooterIFrame = function() {
  console.log("=======creating footer iframe=====");
  var newFrame = createNewIframe("footerIframe", "footerIframe", "100%", "310px");
  var division = document.getElementById("footerDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Set content in footer iframe
   Once the footer iframe is created to display the footer
   we give =http://footer.vlabs.ac.in/footer= as source of
   the iframe. The content of the footer will be dynamically
   served from the footer service.
#+NAME: set-footer-content-in-iframe
#+BEGIN_SRC javascript
var setFooterContentInIframe=function() {
  console.log("=======setting footer in iframe=====");
  var iframe = document.getElementById("footerIframe");
  iframe.src = "http://footer.vlabs.ac.in/footer";
};

#+END_SRC

** Insert Frame
   Insert a frame in the =dis_iframe= division.  The name
   and id of this frame is =iframe1=.
#+NAME: insert-frame
#+BEGIN_SRC javascript 
var insertFrame = function() {
  console.log("=======insert iframe=====");
  var newFrame = createNewIframe("iframe1", "iframe1", "100%", "1200");
  var division = document.getElementById('dis_iframe');
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Loading all disciplines
   This allows to manipulate the content of an iframe by
   invoking =getAllDisciplines()= function and set the
   obtained disciplines by invoking =setContentInIframe()=
   in the content iframe.
#+NAME: load-all-disciplines
#+BEGIN_SRC javascript 
var loadAllDisciplines = function() {
  console.log("=======loading all disciplines=====");
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "1400");
  insertFrameInDivision(newFrame, "contentDiv");
  var disciplines = getAllDisciplines();
  setContentInIframe(disciplines);
};

#+END_SRC

** Loading all institutes
   This allows to manipulate the content of an iframe by
   invoking =getAllInstitutes()= function and set the
   obtained institutes by invoking =setContentInIframe()= in
   the content iframe.

#+NAME:load-all-institutes
#+BEGIN_SRC javascript 
var loadAllInstitutes = function() {
  console.log("=======loading all institutes=====");
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "1400");
  insertFrameInDivision(newFrame, "contentDiv");
  var institutes = getAllInstitutes();
  setContentInIframe(institutes);
};

#+END_SRC

** Loading all labs
   This allows to manipulate the content of an iframe by
   invoking =getAllLabs()= function and set the obtained
   labs by invoking =setContentInIframe()= in the content
   iframe.
#+NAME: load-all-labs
#+BEGIN_SRC javascript 
var loadAllLabs = function() {
  console.log("=======loading all labs=====");
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "1400");
  insertFrameInDivision(newFrame, "contentDiv");
  var labs = getAllLabs();
  setContentInIframe(labs);
};

#+END_SRC

** Change the content of an iframe
   Sometimes it might be handy to manipulate the contents of
   an iframe by accessing the elements within the iframe.
   We show this by loading a =welcome.html= as source of the
   iframe. The content of the newly created iframe cannot be
   set immediately, therefore we wait for some time and then
   set the content of the newly created frame.

#+NAME: set-content
#+BEGIN_SRC javascript 
var setContent = function() {
  console.log("=======setting content=====");      
  var iframe = parent.document.getElementById("disiframe");
  var content = iframe.contentWindow.document;
};

var setContentInIframe = function() {
  console.log("=======setting content to content iframe=====");        
  var iframe = parent.document.getElementById("contentIframe");
  iframe.src = "./content.html";
};

var setNewContentInIframe = function(data) {
  console.log("=======setting new content to content iframe=====");        
  console.log(data);
  console.log(parent.document.getElementById(window.name));
  var elem = parent.document.getElementById("contentIframe");
  console.log("elem = " + elem);
  console.log("new htdfdfml = " + data);
  elem.contentDocument.write(data);
};

#+END_SRC
   
** Get All Institutes
   This function will be invoked when =All Institutes= tab
   is clicked. It invokes a call to =LDS= database and
   fetches all the institutes info and calls
   =setNewContentInIframe()= function to display the data in
   an iframe. Also calls =addScriptTags()= function to
   append =main.js=, =jquery= and =app-config= to =<head>=
   tag as =<script>=.

#+NAME: get-all-institutes
#+BEGIN_SRC javascript 
var getAllInstitutes = function(){ 
  console.log("=========inside get all institutes==========");
  var institute_url = base_url+"/institutes";
  console.log(institute_url);
  $.getJSON(institute_url, function(data) {
    var institutes = '';
    $.each(data, function(key, value){
      var institute_name = value['institute_name'];
      var image_name = value['assets'][0]['path'];
      var image_path = institute_images_url + image_name;
      institutes += '<div class="col-sm-3"><img onclick="getLabsByInstituteName(this)" src="'
        + image_path +'" id="' + institute_name + '"></div>';
      
    });
    var institute_list = '<div class="container-fluid"><div class="row">'
        + institutes +'</div></div>';
    console.log(institutes);
    setNewContentInIframe(institute_list);
    addScriptTags();
  })
    .done(function() {
      console.log( "second success" );
    })
    .fail(function() {
      console.log( "error" );
    })
    .always(function() {
      console.log( "complete" );
    });
};

#+END_SRC
** Get All Disciplines
   This function will be invoked when =All Disciplines= tab
   is clicked. It invokes a call to =LDS= database and
   fetches all the disciplines info and calls
   =setNewContentInIframe()= function to display the data in
   an iframe. Also calls =addScriptTags()= function to
   append =main.js=, =jquery= and =app-config= to =<head>=
   tag as =<script>=.
#+NAME: get-all-disciplines
#+BEGIN_SRC javascript 
var getAllDisciplines = function(){ 
  console.log("=========inside get all disciplines==========");
  var dis_url = base_url+"/disciplines";
  console.log(dis_url);
  $.getJSON(dis_url, function(data) {
    var disciplines = '';
    $.each(data, function(key, value){
      var discipline_name = value['discipline_name'];
      var image_name = value['assets'][0]['path'];
      var image_path = discipline_images_url + image_name;
      disciplines += '<div class="col-sm-3"><img onclick="getLabsByDisciplineName(this)" src="'
        + image_path +'" id="' + discipline_name + '"></img><p>'+ discipline_name +'</p></div>';
    });
    var discipline_list = '<div class="container-fluid"><div class="row">'
        + disciplines +'</div></div>';

    console.log(disciplines);
    setNewContentInIframe(discipline_list);
    addScriptTags();
  })
    .done(function() {
      console.log( "second success" );
    })
    .fail(function() {
      console.log( "error" );
    })
    .always(function() {
      console.log( "complete" );
    });
};

#+END_SRC
** Get All Labs
   This function will be invoked when =All Labs= tab is
   clicked. It invokes a call to =LDS= database and fetches
   all the labs info and calls =setNewContentInIframe()=
   function to display the data in an iframe. Also calls
   =addScriptTags()= function to append =main.js=, =jquery=
   and =app-config= to =<head>= tag as =<script>=.   
#+NAME: get-all-labs
#+BEGIN_SRC  javascript 
var getAllLabs = function(){ 
  console.log("=========inside get all labs==========");
  var lab_url = base_url+"/labs";
  console.log(lab_url);
  $.getJSON(lab_url, function(data) {
    var labs = '';
    $.each(data, function(key, value){
      var lab_name = value['lab_name'];
      var hosting_info = value['hosting_info'];
      for(var i=0;i< hosting_info.length;i++){
        var hosted_on = value['hosting_info'][i]['hosted_on'];
        if (hosting_info.length == 1){
          var hosted_url = value['hosting_info'][0]['hosted_url'];
        }
        else if(labs_hosted_platform == hosted_on)
        {
          var hosted_url = value['hosting_info'][i]['hosted_url'];
        }
        else
        {
          continue;
        }
        
      }
      var assets = value['assets'];
      console.log(assets);
      for(var i=0;i< assets.length;i++){
        var  asset_type = value['assets'][i]['asset_type']['asset_type'];
        var path = value['assets'][i]['path'];
        if (asset_type == 'image'){
          var image_name = value['assets'][i]['path'];
          console.log(image_name);
          var path = lab_images_url + image_name;
          console.log(path);
        }
      }
      labs += '<div class="col-sm-3" id=' + lab_name + '><a href='+ hosted_url + '><img src="'
        + path +'" width="250px" height="160px" alt="image"/> </a><p>'
        +lab_name +'</p></div></div>';      
    });
    console.log(labs);
    var labs_list = '<div class="container-fluid"><div class="row">'+ labs +'</div></div>';
    setNewContentInIframe(labs_list);
    addScriptTags();
  })
    .done(function() {
      console.log( "second success" );
    })
    .fail(function() {
      console.log( "error" );
    })
    .always(function() {
      console.log( "complete" );
    });
};

 #+END_SRC
** Get Labs by Discipline Name
   =getAllDisciplines()= function will invokes this
   function. This function dynamically fetches the labs
   based on the 'click' event occurs on discipline
   name. This function also invokes
   =resetContentInIframe(data)= function to replace
   currently available content with the given =data=.

#+NAME: get-labs-by-discipline-name
#+BEGIN_SRC javascript 
var getLabsByDisciplineName = function(image) {
  console.log("===========inside getLabsByDisciplineName==========");
  var discipline_name = image.id;
  var labs_url = base_url+"/labs";
  console.log(labs_url);
  var labs_by_dis_url = labs_url+"?discipline_name="+ discipline_name;
  console.log(labs_by_dis_url);
  $.getJSON(labs_by_dis_url, function(data) {
    var labs = '';
    $.each(data, function(key, value){
      var lab_name = value['lab_name'];
      var hosting_info = value['hosting_info'];
      for(var i=0;i< hosting_info.length;i++){
        var hosted_on = value['hosting_info'][i]['hosted_on'];
        if (hosting_info.length == 1){
          var hosted_url = value['hosting_info'][0]['hosted_url'];
        }
        else if(labs_hosted_platform == hosted_on)
        {
          var hosted_url = value['hosting_info'][i]['hosted_url'];
        }
        else
        {
          continue;
        }
        
      }
      var assets = value['assets'];
      console.log(assets);
      for(var i=0;i< assets.length;i++){
        var  asset_type = value['assets'][i]['asset_type']['asset_type'];
        var path = value['assets'][i]['path'];
        if (asset_type == 'image'){
          var image_name = value['assets'][i]['path'];
          console.log(image_name);
          var path = lab_images_url + image_name;
          console.log(path);
        }
      }
      labs += '<div class="col-sm-3" id=' + lab_name + '><a href='+ hosted_url + '><img src="'
        + path +'" width="250px" height="160px" alt="image"/> </a><p>'
        +lab_name +'</p></div></div>';
    });
    console.log(labs);
    resetContentInIframe(labs);
  })
    .done(function() {
      console.log( "second success" );
    })
    .fail(function() {
      console.log( "error" );
      location.reload();
    })
    .always(function() {
      console.log( "complete" );
    });
  
};


#+END_SRC
** Get Labs by Institute Name
   =getAllInstitutes()= function will invokes this
   function.This function dynamically fetches the labs based
   on the 'click' event occurs on institute name.

#+NAME: get-labs-by-institute-name
#+BEGIN_SRC javascript 
var getLabsByInstituteName = function(image) {
  console.log("===========inside getLabsByInstituteName==========");
  var institute_name = image.id;
  var labs_url = base_url+"/labs";
  console.log(labs_url);
  var labs_by_institute_url = labs_url+"?institute_name="+ institute_name;
  console.log(labs_by_institute_url);
  $.getJSON(labs_by_institute_url, function(data) {
    var labs = '';
    $.each(data, function(key, value){
      var lab_name = value['lab_name'];
      var hosting_info = value['hosting_info'];
      for(var i=0;i< hosting_info.length;i++){
        var hosted_on = value['hosting_info'][i]['hosted_on'];
        if (hosting_info.length == 1){
          var hosted_url = value['hosting_info'][0]['hosted_url'];
        }
        else if(labs_hosted_platform == hosted_on)
        {
          var hosted_url = value['hosting_info'][i]['hosted_url'];
        }
        else
        {
          continue;
        }
        
      }
      var assets = value['assets'];
      console.log(assets);
      for(var i=0;i< assets.length;i++){
        var  asset_type = value['assets'][i]['asset_type']['asset_type'];
        var path = value['assets'][i]['path'];
        if (asset_type == 'image'){
          var image_name = value['assets'][i]['path'];
          console.log(image_name);
          var path = lab_images_url + image_name;
          console.log(path);
        }
      }
      labs += '<div id=' + lab_name + '><a href='+ hosted_url + '><img src="'
        + path +'" width="250px" height="160px" alt="image"/> </a><p>'
        +lab_name +'</p></div></div>';

    });
    console.log(labs);
    resetContentInIframe(labs);
  })
    .done(function() {
      console.log( "second success" );
    })
    .fail(function() {
      console.log( "error" );
      location.reload();
    })
    .always(function() {
      console.log( "complete" );
    });
};

#+END_SRC

** Add Script Tags 
   Script tags are created dynamically and appended to the
   =<head>= tag.

#+NAME: add-script-tags
#+BEGIN_SRC javascript 
var addScriptTags = function(){
  var contentIframe = parent.document.getElementById("contentIframe");
  
  var js_script = contentIframe.contentWindow.document.createElement("script");
  var js_url = "../static/js/main.js";
  js_script.type = "text/javascript";
  js_script.src = js_url;
  var head = contentIframe.contentWindow.document.head;
  console.log(head);
  head.appendChild(js_script);
  
  var config_script = contentIframe.contentWindow.document.createElement("script");
  var config_url = "../static/js/app-config.js";
  config_script.type = "text/javascript";
  config_script.src = config_url;
  head.appendChild(config_script);
  
  var jquery_script = contentIframe.contentWindow.document.createElement("script");
  var jquery_url = "https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js";
  jquery_script.type = "text/javascript";
  jquery_script.src = jquery_url;
  head.appendChild(jquery_script);  

  var bootstrap_js = contentIframe.contentWindow.document.createElement("script");
  var bootstrap_js_url = "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js";
  bootstrap_js.type = "text/javascript";
  bootstrap_js.src = bootstrap_js_url;
  head.appendChild(bootstrap_js);  

  var styles = contentIframe.contentWindow.document.createElement("link");
  var css_url = "../static/css/style.css";
  styles.type = "text/stylesheet";
  styles.href = css_url;
  head.appendChild(styles);

  var bootstrap_styles = contentIframe.contentWindow.document.createElement("link");
  var bootstrap_css_url = "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css";
  bootstrap_styles.rel = "stylesheet";
  bootstrap_styles.href = bootstrap_css_url;
  head.appendChild(bootstrap_styles);

};



#+END_SRC
** Resetting content in Iframe
   Resetting the content in the same frame is just element
   manipulation where =contentIframe= is accessed and new
   content is set.
#+NAME: reset-content
#+BEGIN_SRC javascript 
var resetContentInIframe = function(data) {
  console.log("=======re setting content=====");        
  console.log(data);
  var content = parent.document.getElementById('contentIframe').contentWindow.document;
  console.log(content);
  content.body.innerHTML="";
  content.write(data);
};

#+END_SRC

** Mouse Over
#+NAME: mouse-over
#+BEGIN_SRC javascript
var mouse_hover = function(){
  $(document).ready(function(){
    $(".dropdown").hover(            
      function() {
        $('.dropdown-menu', this).not('.in .dropdown-menu').stop(true,true).slideDown("400");
        $(this).toggleClass('open');        
      },
      function() {
        $('.dropdown-menu', this).not('.in .dropdown-menu').stop(true,true).slideUp("400");
        $(this).toggleClass('open');       
      }
    );
 });
};

#+END_SRC

** style sheets
#+NAME: style-sheets
#+BEGIN_SRC css
body {
  font-family: 'Open Sans', 'sans-serif';
}
.mega-dropdown {
  position: static !important;
}
.mega-dropdown-menu .dropdown-header {
  font-size: 18px;
  color:  #5FB0E4;
  padding: 5px 60px 5px 5px;
  line-height: 30px;
}

/*.mega-dropdown-menu > li > ul {
  padding: 0;
  margin: 0;
}
.mega-dropdown-menu > li > ul > li {
  list-style: none;
}
.mega-dropdown-menu > li > ul > li > a {
  display: block;
  color: #222;
  padding: 3px 5px;
}
.mega-dropdown-menu > li ul > li > a:hover,
.mega-dropdown-menu > li ul > li > a:focus {
  text-decoration: none;
}*/

.carousel-control {
  width: 30px;
  height: 30px;
  top: -35px;

}
.left.carousel-control {
  right: 30px;
  left: inherit;
}
.carousel-control .glyphicon-chevron-left, 
.carousel-control .glyphicon-chevron-right {
  font-size: 12px;
  background-color: #fff;
  line-height: 30px;
  text-shadow: none;
  color: #333;
  border: 1px solid #ddd;
}
.contentDiv{
position:absolute;
height:650px;
}

#+END_SRC
* Tangle 
** sources
*** Javascript
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes 
<<load-index>>
<<create-new-iframe>>
<<delete-frame-in-division>>
<<set-header-content-in-iframe>>
<<insert-content-iframe>>
<<insert-footer-iframe>>
<<set-footer-content-in-iframe>>
<<insert-header-iframe>>
<<insert-frame>>
<<load-all-disciplines>>
<<load-all-institutes>>
<<load-all-labs>>
<<set-content>>
<<get-all-institutes>>
<<get-all-disciplines>>
<<get-all-labs>>
<<get-labs-by-discipline-name>>
<<get-labs-by-institute-name>>
<<add-script-tags>>
<<reset-content>>
<<mouse-over>>
#+END_SRC
*** Config
#+BEGIN_SRC javascript :tangle static/js/app-config.js :eval no :noweb yes 
<<app-config>>
#+END_SRC
*** HTML
#+BEGIN_SRC html :tangle templates/header.html :eval no :noweb yes
<<header-html>>
#+END_SRC
#+BEGIN_SRC html :tangle templates/main.html :eval no :noweb yes
<<main-html>>
#+END_SRC
#+BEGIN_SRC html :tangle templates/content.html :eval no :noweb yes
<<content-html>>
#+END_SRC

*** CSS
#+BEGIN_SRC css :tangle static/css/style.css :eval no :noweb yes 
<<style-sheets>>
#+END_SRC
