#+TITLE: Runtime
#+AUTHOR: VLEAD
#+DATE: [2017-04-06 Thursday]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../org-templates/level-1.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export

* Introduction 
  :PROPERTIES:
  :CUSTOM_ID: introduction
  :END: 
  This "Literate Document" is an illustration of building =Vlabs landing Pages=
  dynamically. Data will be provided by =Lab Data Service=.

* Implementation
** Structure of html
#+BEGIN_SRC html :tangle templates/main.html :eval no :noweb yes 

<!DOCTYPE html>
<html>
  <head>
    <meta content="text/html;charset=utf-8" http-equiv="Content-Type">
    <meta content="utf-8" http-equiv="encoding">
    <link rel="stylesheet" href="style.css"/>
  <script type="text/javascript" src="../static/js/app-config.js"></script>
    <script type="text/javascript" src="../static/js/main.js"></script>
  </head>
  <body onload="loadIndex()">
    <div id="headerDiv"></div>
    <div id="contentDiv"></div>
    <div id="footerDiv"></div>
  </body>
</html>

#+END_SRC

** HTML loaded to iframe
#+BEGIN_SRC html :tangle templates/iframe_template.html :eval no :noweb yes

<html>
  <head></head>
  <body>
    <script>
      document.domain="localhost"
    </script>
    <div id="template-div">
    </div>
</html>

#+END_SRC
** Welcome
#+BEGIN_SRC html :tangle templates/content.html :eval no :noweb yes

<html>
  <head>welcome
    <script>
      document.domain="localhost"
    </script>
  </head>
  <body>
    <p> welcome to virtual labs!</p>
  </body>
  </html>

#+END_SRC

** Header
   This includes the content that has to be displayed in the header. Institute,
   disciplines and all labs along with drop down with institutes, disciplines
   and also all labs.
#+BEGIN_SRC html :tangle templates/header.html :eval no :noweb yes


<header >
  <link rel="stylesheet"
        href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link rel="stylesheet" href="../static/js/bootstrap.css">
  <link rel="stylesheet" href="../static/js/font-awesome.css">
  <link rel="stylesheet" href="../static/js/bootsnipp.css">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script type="text/javascript" src="../static/js/app-config.js"></script>
  <script type="text/javascript" src="../static/js/main.js"></script>
  

  <nav class="navbar navbar-fixed-top navbar-bootsnipp animate" role="navigation" style="z-index: 9999999">

    <div class="container-fluid">

      <div class="navbar-header">
        <a class="navbar-brand main-logo-a" href="https://vlabs.ac.in" style=" width:100px; height:40px; margin-top:-13px"><img src="https://vlabs.ac.in/static/edx-bootstrap-theme/images/logo.7e034286282a.png" class="img-responsive main-logo" style="width:100%; maring-top:2px;"></a>

      </div>

      <ul class="nav navbar-nav">
        <li class="active"><a href="#">Home</a></li>

       <!-- <li class="dropdown" ><a class="dropdown-toggle" data-toggle="dropdown" href="#">Institutes <span class="caret"></span></a>
          <ul class="dropdown-menu filterInstComboBox" id="getInstName">
          </ul>
          
        <li class="dropdown" ><a class="dropdown-toggle" data-toggle="dropdown" href="#">Disciplines <span class="caret"></span></a>
          <ul class="dropdown-menu filterDisComboBox" id="getDisName">
          </ul></li>-->
      <button onclick="loadAllInstitutes()">All Institutes</button>          
      <button onclick="loadAllDisciplines()">All Disciplines</button>
      <button onclick="setWebAppInSandBoxedIframe()">All Labs</button>

        
      </ul>
      <ul class="nav navbar-nav navbar-right">
        <form class="navbar-form navbar-left">
          <div class="input-group">
            <input id="keyword" type="text" class="form-control" placeholder="Lab Name">
            <div class="input-group-btn">
              <button onclick="javascript:getLabs()" target="content_iframe" class="btn btn-default" type="submit">
                <i class="glyphicon glyphicon-search"></i>
              </button>
            </div>
          </div>
        </form>        
        <li><a href="http://vlabs.ac.in" target="content_iframe"><span class="glyphicon glyphicon-user"></span> Sign Up</a></li>
      <li><a href="#"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>
    </ul>

    </div>
  </nav>

</header>

#+END_SRC

** Document Domain
   Manipulation of iframe content from javascript loaded in the document is
   possible if the both the iframe content and the javascript manipulating the
   iframe are loaded from the same domain.
#+BEGIN_SRC js :tangle static/js/app-config.js :eval no :noweb yes
document.domain="localhost";
// update this to lds url where your lds service was running
var base_url = "http://localhost:5000"; 
var institute_images_url = "../static/images/institutes/";
var discipline_images_url = "../static/images/disciplines/";

#+END_SRC

** Index page on load 
   An index initially loads with a header iframe and content iframe.
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes

var loadIndex = function() {
  console.log("=======loading index page=====");
  insertHeaderIFrame();
  setHeaderContentInIframe();
  insertContentIFrame();
  setContentInIframe();
};

#+END_SRC
** Create a frame
   Provide the attributes, and an iframe is created and returned.  The
   attributes are name, id, width and height of the frame.
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes
var createNewIframe = function(name, id, width, height) {
  console.log("=======creating new frame=====");
  var newIframe = document.createElement("iframe");
  newIframe.setAttribute("width", width);
  newIframe.setAttribute("height", height);
  newIframe.name = name;
  newIframe.id = id;
  return newIframe;
};

#+END_SRC

** Insert a Frame in a Division
   Given a division, and an iframe, the iframe is inserted in the division.

#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes

var insertFrameInDivision = function(iframe, divId) {
  console.log("=======inserting iframe in division=====");
  var divElem = parent.document.getElementById(divId);
  divElem.appendChild(iframe);
};


#+END_SRC

** Delete Frame from a Division
   Given a frame and a division, an iframe within the division is deleted.

#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes

var deleteFrameInDivision = function(frameId, divId) {
  console.log("=======inside delete frame=====");
  if (parent.document.getElementById(divId).hasChildNodes()) {
    var frameElem = parent.document.getElementById(frameId);
    if (frameElem !== null) {
      frameElem.parentNode.removeChild(frameElem);
      console.log("======deleted====");
    }
  }
};


#+END_SRC

** Set content in header iframe
   To display a header we give =header.html= as source of the iframe. The
   content of the =header.html= will be set immediately
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes

var setHeaderContentInIframe=function() {
  console.log("=======setting header in iframe=====");
 // deleteFrame();
 // insertFrame();
  var iframe = document.getElementById("headerIframe");
  iframe.src = "./header.html";
  //setTimeout(setContent, 100);

};

#+END_SRC

** Creating the header iframe
   Provide the header for selecting the institutes, disciplines and all labs.
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes

var insertHeaderIFrame = function() {
  console.log("=======creating header iframe=====");
  var newFrame = createNewIframe("headerIframe", "headerIframe", "100%", "30%");
  var division = document.getElementById("headerDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Creating the content iframe
   Displays the content iframe based on the selection of the institutes, disciplines and all labs. 
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes

var insertContentIFrame = function() {
  console.log("=======creating content iframe=====");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "50%");
  var division = document.getElementById("contentDiv");
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Insert New Frame
   Insert a frame in the =dis_iframe= division.  The name and id of this frame
   is =iframe1=.
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes
var insertFrame = function() {
  console.log("=======insert iframe=====");
  var newFrame = createNewIframe("iframe1", "iframe1", "100%", "30%");
  var division = document.getElementById('dis_iframe');
  insertFrameInDivision(newFrame, division.id);
};

#+END_SRC

** Loading all disciplines

   On loading disciplines it deletes pre loaded content iframe and creates one
   new content iframe and set values to the newly created content iframe.
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes

var loadAllDisciplines = function() {
  console.log("=======loading all disciplines=====");
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "30%");
  insertFrameInDivision(newFrame, "contentDiv");
  var disciplines = getAllDisciplines();
  setContentInIframe(disciplines);
};

#+END_SRC

** Loading all institutes
   On loading institutes it deletes pre loaded content iframe and creates one
   new content iframe and set values to the newly created content iframe.

#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes

var loadAllInstitutes = function() {
  console.log("=======loading all institutes=====");
  deleteFrameInDivision("contentIframe", "contentDiv");
  var newFrame = createNewIframe("contentIframe", "contentIframe", "100%", "30%");
  insertFrameInDivision(newFrame, "contentDiv");
  var institutes = getAllInstitutes();
  setContentInIframe(institutes);
};

#+END_SRC

** Set source of iframe
   Set source of iframe with id =iframe1=.
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes
var setWebAppInIframe = function() {
  console.log("=======setting web app in an iframe=====");  
  var iframe = document.getElementById("iframe1");
  iframe.src = "http://dev.vlabs.ac.in";
};


#+END_SRC

** Set source in a sandboxed iframe
   Make an iframe sand boxed and set the source to it.  Sometimes this is
   necessary since certain web pages expand out of iframe and these need to be
   sand boxed.

#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes
var setWebAppInSandBoxedIframe = function() {
  console.log("=======setting web app in an sandboxed for content iframe=====");    
  deleteFrame();
  insertFrame();
  var iframe = document.getElementById("iframe1");
  iframe.sandbox = 'allow-forms allow-scripts allow-same-origin';
  iframe.src = "https://vlabs.ac.in";
};

#+END_SRC

** Change the content of an iframe
   Sometimes it might be handy to manipulate the contents of an iframe by
   accessing the elements within the iframe.  We show this by loading a
   =welcome.html= as source of the iframe.  =main.html= has a division
   identified by =dis_iframe=.  The content of the newly created iframe
   cannot be set immediately, therefore we wait for some time and then set the
   content of the newly created frame.

   Resetting the content in the same frame is just element manipulation where
   == is accessed and new content is set.
   
 #+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes
var setContent = function() {
  console.log("=======setting content=====");      
  var iframe = parent.document.getElementById("disiframe");
  var content = iframe.contentWindow.document;
//  var elem = content.getElementById('content_iframe');
//  elem.innerHTML = "<p>Hello world</p>";
};

var setContentInIframe = function() {
  console.log("=======setting content to content iframe=====");        
  var iframe = parent.document.getElementById("contentIframe");
  iframe.src = "./content.html";
};


var setNewContentInIframe = function(data) {
  console.log("=======setting new content to content iframe=====");        
  console.log(data);
  console.log(parent.document.getElementById(window.name));
  var elem = parent.document.getElementById("contentIframe");
  console.log("elem = " + elem);
  console.log("new htdfdfml = " + data);
  elem.contentDocument.write(data);
//    setTimeout(setContent, 100);
};

var resetContentInIframe = function() {
  console.log("=======re setting content=====");        
  var iframe = document.getElementById("iframe1");
  var content = iframe.contentWindow.document;
  var elem = content.getElementById('template-div');
  elem.innerHTML = "<p>Resetting Hello world</p>";
};

#+END_SRC
   
** Edits
*** setting content to content iframe
#+BEGIN_SRC js
  var setInstituteContentInIframe = function() {
  console.log("=======setting content to content iframe=====");        
  var iframe = parent.document.getElementById("contentIframe");
  iframe.src = "./re_welcome.html";
};

#+END_SRC

 
*** creating content iframe
#+BEGIN_SRC js
var insertNewContentIFrame = function() {
  console.log("=======creating content iframe=====");
  var newFrame = createNewIframe("disiframe", "disiframe", "100%", "30%");
  var ids = parent.document.querySelectorAll('[id]');
  Array.prototype.forEach.call( ids, function( el, i ) {
    // "el" is your element
    console.log( el.id ); // log the ID
  });
  var division = parent.document.getElementById('dis_iframe');
  var divId = division.id;
  insertFrameInDivision(newFrame, divId);
};

#+END_SRC   
*** deleting content iframe
    #+BEGIN_SRC js
    var deleteFrame = function() {
  console.log("=======deleting content iframe=====");  
  //  frame = document.getElementById('header_iframe');
  var iframes= parent.document.getElementsByTagName("iframe");
  for (var i=0; i<iframes.length;i++){
    console.log("======frame to be deleted=====");
    var frame_name = iframes[i].id;
    console.log(frame_name);
  }
//    if(frame_name != 'head_iframe1'){
    var frame= parent.document.getElementById('content_iframe');
    var division = parent.document.getElementById('header_iframe');
  deleteFrameInDivision(frame.id, division.id);

  };

    #+END_SRC
 
*** setting new content
#+BEGIN_SRC js
var setNewContent = function(disciplines) {
  console.log("=======setting new content=====");      
  var iframe = parent.document.getElementById("dis_iframe");
  var content = iframe.contentWindow.document;
  var elem = parent.content.getElementById('dis_iframe');
  elem.innerHTML = disciplines;
};

#+END_SRC
** Get All Institutes
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes
var getAllInstitutes = function(){
  console.log("getallinstitutes");
  var inst_url = base_url+"/institutes";
  $.getJSON(inst_url, function(data) {
    var institutes = '';
    $.each(data, function(key, value){
      var institute_name = value['institute_name'];
      var image_name = value['assets'][0]['path'];
      var image_path = institute_images_url + image_name;
      institutes += '<img src="' + image_path +'" id="' + institute_name + '"></img><p>'+ institute_name +'</p>';
    });
    setNewContentInIframe(institutes);
  })
    .done(function() {
      console.log( "second success" );
    })
    .fail(function() {
      console.log( "error" );
      location.reload();
    })
    .always(function() {
      console.log( "complete" );
    });
};

#+END_SRC
** Get All Disciplines
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes
var getAllDisciplines = function(){ 
  console.log("=========inside get all disciplines==========");
  var dis_url = base_url+"/disciplines";
  console.log(dis_url);
  $.getJSON(dis_url, function(data) {
    var disciplines = '';
    $.each(data, function(key, value){
      var discipline_name = value['discipline_name'];
      var image_name = value['assets'][0]['path'];
      var image_path = discipline_images_url + image_name;
      console.log('<img onclick="getLabsByDisciplineName(this)" src="' + image_path +'" id="' + discipline_name + '"></img><p>'+ discipline_name +'</p>');
      disciplines += '<img onclick="getLabsByDisciplineName(this)" src="' + image_path +'" id="' + discipline_name + '"></img><p>'+ discipline_name +'</p>';
    });
    console.log(disciplines);
    setNewContentInIframe(disciplines);
    addScriptTags();
  })
    .done(function() {
      console.log( "second success" );
    })
    .fail(function() {
      console.log( "error" );
    })
    .always(function() {
      console.log( "complete" );
    });
};

#+END_SRC
** Get Labs by Discipline Name
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes 
var getLabsByDisciplineName = function(image) {
  console.log("===========inside getLabsByDisciplineName==========");
  var discipline_name = image.id;
  var labs_url = base_url+"/labs";
  console.log(labs_url);
  var labs_by_dis_url = labs_url+"?discipline_name="+ discipline_name;
  console.log(labs_by_dis_url);
};
#+END_SRC
** Add Script Tags 
#+BEGIN_SRC javascript :tangle static/js/main.js :eval no :noweb yes 
var addScriptTags = function(){
  var contentIframe = parent.document.getElementById("contentIframe");
  var script1 = contentIframe.contentWindow.document.createElement("script");
  var js_url = '../static/js/main.js';
  script1.type = "text/javascript";
  script1.src = js_url;
  var head = contentIframe.contentWindow.document.head;
  console.log(head);
  head.appendChild(script1);
  var script2 = contentIframe.contentWindow.document.createElement("script");
  var config_url = "../static/js/app-config.js";
  script2.type = "text/javascript";
  script2.src = config_url;
  head.appendChild(script2);
  var script3 = contentIframe.contentWindow.document.createElement("script");
  var jquery_url = "https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js";
  script3.type = "text/javascript";
  script3.src = jquery_url;
  head.appendChild(script3);  
};

#+END_SRC
